FROM php:8.1-fpm-alpine

RUN apk add --no-cache \\
    nginx \\
    supervisor \\
    redis \\
    git \\
    curl \\
    zip \\
    unzip \\
    libpng-dev \\
    libzip-dev \\
    oniguruma-dev \\
    freetype-dev \\
    libjpeg-turbo-dev \\
    openssl-dev \\
    && docker-php-ext-configure gd --with-freetype --with-jpeg \\
    && docker-php-ext-install -j$(nproc) gd pdo_mysql mysqli bcmath opcache zip pcntl exif

# 安装 Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# 创建工作目录
RUN mkdir -p /www
WORKDIR /www

# 复制代码到容器
COPY . /www/

# 创建配置文件
COPY .docker/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# 创建 Nginx 配置
RUN mkdir -p /etc/nginx/http.d/
RUN cat > /etc/nginx/http.d/default.conf << 'EOL'
server {
    listen 7001;
    root /www/public;
    index index.php index.html;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    location ~ /\.ht {
        deny all;
    }
}
EOL

# 创建 Supervisor 配置
RUN mkdir -p /etc/supervisor/conf.d/
RUN cat > /etc/supervisor/conf.d/supervisord.conf << 'EOL'
[supervisord]
nodaemon=true
user=root

[program:php-fpm]
command=php-fpm -F
autostart=true
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

[program:nginx]
command=nginx -g "daemon off;"
autostart=true
autorestart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
EOL

# 创建数据目录
RUN mkdir -p /data && chown redis:redis /data

RUN chmod +x /entrypoint.sh

# 环境变量
ENV ENABLE_WEB=true \
    ENABLE_HORIZON=true \
    ENABLE_REDIS=false

EXPOSE 7001
CMD ["/entrypoint.sh"]